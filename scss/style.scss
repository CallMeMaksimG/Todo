@import './variables.scss';
@import './mixins.scss';
@import url('https://fonts.googleapis.com/css2?family=Barriecito&family=Inter:wght@300;400;700&family=Kablammo&family=Raleway:wght@500&family=Roboto:ital,wght@0,100;0,300;0,400;0,500;0,700;0,900;1,100;1,300;1,400;1,500;1,700;1,900&family=Unbounded:wght@600&display=swap');

html {
    box-sizing: border-box;
    line-height: 1.15;
    font-family: 'Inter', sans-serif;
}

*, *::before, *::after {
    box-sizing: inherit;
    margin: 0;
    padding: 0;
}

ul {
    list-style: none;
}

a {
    text-decoration: none;
    color: inherit;
}

html, body {
    height: 100%;
}

.wrapper {
    min-height: 100%;
    font-size: 18px;
    transition: background .4s ease-in-out;
}

.container {
    max-width: 900px;
    margin: 0 auto;
}
.container__header {
    padding: 20px 5px;
    display: flex;
    justify-content: end;
}
form {
    position: relative;
}
.task {
    margin-top: 50px;
}
.task__list {
    display: flex;
    flex-direction: column;
    gap: 25px;
    padding-left: 30px;
}
.task__list-item {
    transition: color .4s ease-in-out;
    display: flex;
}
.checkbox {
    margin-right: 15px;
}

[type="checkbox"]:not(:checked),
[type="checkbox"]:checked {
position: absolute;
left: 0;
opacity: 0.01;
}
[type="checkbox"]:not(:checked) + label,
[type="checkbox"]:checked + label {
position: relative;
padding-left: 2.3em;
font-size: 1.05em;
line-height: 1.7;
cursor: pointer;
}

[type="checkbox"]:not(:checked) + label:before,
[type="checkbox"]:checked + label:before {
content: '';
position: absolute;
left: 0;
top: 0;
width: 1.4em;
height: 1.4em;
border: 1px solid #aaa;
border-radius: .2em;
box-shadow: inset 0 1px 3px rgba(0,0,0, .1), 0 0 0 rgba(203, 34, 237, .2);
-webkit-transition: all .275s;
transition: all .275s;
transition: background .4s ease-in-out;
}

[type="checkbox"]:not(:checked) + label:after,
[type="checkbox"]:checked + label:after {
content: 'âœ“';
position: absolute;
top: .525em;
left: .18em;
font-size: 1.375em;
line-height: 0;
-webkit-transition: all .2s;
transition: all .2s;
}

/* checked mark aspect changes */
[type="checkbox"]:not(:checked) + label:after {
opacity: 0;
-webkit-transform: scale(0) rotate(45deg);
transform: scale(0) rotate(45deg);
}

[type="checkbox"]:checked + label:after {
opacity: 1;
-webkit-transform: scale(1) rotate(0);
transform: scale(1) rotate(0);
}

/* Disabled checkbox */
[type="checkbox"]:disabled:not(:checked) + label:before,
[type="checkbox"]:disabled:checked + label:before {
box-shadow: none;
border-color: #bbb;
background-color: #e9e9e9;
}

[type="checkbox"]:disabled:checked + label:after {
color: #777;
}

[type="checkbox"]:disabled + label {
color: #aaa;
}

.task__delete-btn {
    border: none;
    background: inherit;
    cursor: pointer;
    margin-left: auto;
    margin-right: 30px;
    transition: stroke .4s ease-in-out, fill .4s ease-in-out, opacity .4s ease-in-out;
}


.wrapper.darken {
    color: $darkMainFontColor;
    background: $darkBackgroundColor;
    .switch-theme-btn {
        @include switchThemeButton(#CB9821, #CB9821);
    }
    .main-section__title {
        @include title($darkMainFontColor);
    }
    .main-section__input {
        @include inputTask(#697888, $darkMainFontColor, $darkMainFontColor);
    }
    .main-section__btn {
        @include addBtn($darkMainFontColor);
    }
    .task__list {
        color: $darkMainFontColor;
    }
    [type="checkbox"]:not(:checked) + label:after,
    [type="checkbox"]:checked + label:after {
        color:  #ECC424;
    }

    [type="checkbox"]:not(:checked) + label:before,
    [type="checkbox"]:checked + label:before {
        background: $darkBackgroundColor;
    }
    .task__delete-btn {
        @include deleteBtn($darkMainFontColor);
    }
}

.wrapper.lighten {
    color: $lightMainFontColor;
    background: $lightBackgroundColor;

    .switch-theme-btn {
        @include switchThemeButton(#29354B, #29354B);
    }
    .main-section__title {
        @include title($lightMainFontColor);
    }
    .main-section__input {
        @include inputTask(#ced6dd, $lightMainFontColor, $lightMainFontColor);
    }
    .main-section__btn {
        @include addBtn($lightMainFontColor);
    }
    .task__list {
        color: $lightMainFontColor;
    }

    [type="checkbox"]:not(:checked) + label:after,
    [type="checkbox"]:checked + label:after {
        color:  $lightMainFontColor;
    }

    [type="checkbox"]:not(:checked) + label:before,
    [type="checkbox"]:checked + label:before {
        background: $lightBackgroundColor;
    }

    .task__delete-btn {
        @include deleteBtn($lightMainFontColor);
    }
}
